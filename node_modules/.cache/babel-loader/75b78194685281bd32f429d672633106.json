{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0421\\u043E\\u0444\\u0438\\u044F\\\\Desktop\\\\WebDevelopment\\\\react\\\\itog\\\\src\\\\MemeGenerator.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"meme-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"topText\",\n          value: this.state.topText,\n          onChange: handleChange,\n          placeholder: \"Top Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"bottomText\",\n          value: this.state.bottomText,\n          onChange: handleChange,\n          placeholder: \"Top Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Gen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default MemeGenerator;","map":{"version":3,"names":["React","Component","MemeGenerator","constructor","state","topText","bottomText","randomImg","allMemeImgs","handleChange","bind","componentDidMount","fetch","then","response","json","memes","data","setState","event","target","name","value","render"],"sources":["C:/Users/София/Desktop/WebDevelopment/react/itog/src/MemeGenerator.js"],"sourcesContent":["import React, {Component} from \"react\"\r\n\r\nclass MemeGenerator extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            topText: \"\",\r\n            bottomText: \"\",\r\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs: []\r\n        }\r\n        this.handleChange=this.handleChange.bind(this)\r\n    }\r\n    \r\n    componentDidMount() {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {memes} = response.data\r\n                this.setState({ allMemeImgs: memes })\r\n            })\r\n    }\r\n    \r\n    handleChange(event){\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"meme-form\">                  \r\n                    <input \r\n                    type=\"text\" \r\n                    name=\"topText\" value={this.state.topText} onChange={handleChange} placeholder=\"Top Text\" />\r\n                    <input type=\"text\" name=\"bottomText\" value={this.state.bottomText} onChange={handleChange} placeholder=\"Top Text\"/>\r\n                    <button>Gen</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAAA;AAEtC,MAAMC,aAAa,SAASD,SAAS,CAAC;EAClCE,WAAW,GAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,+BAA+B;MAC1CC,WAAW,EAAE;IACjB,CAAC;IACD,IAAI,CAACC,YAAY,GAAC,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAC,iBAAiB,GAAG;IAChBC,KAAK,CAAC,mCAAmC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACC,QAAQ,IAAI;MACd,MAAM;QAACE;MAAK,CAAC,GAAGF,QAAQ,CAACG,IAAI;MAC7B,IAAI,CAACC,QAAQ,CAAC;QAAEV,WAAW,EAAEQ;MAAM,CAAC,CAAC;IACzC,CAAC,CAAC;EACV;EAEAP,YAAY,CAACU,KAAK,EAAC;IACf,IAAI,CAACD,QAAQ,CAAC;MACV,CAACC,KAAK,CAACC,MAAM,CAACC,IAAI,GAAGF,KAAK,CAACC,MAAM,CAACE;IACtC,CAAC,CAAC;EAEN;EAEAC,MAAM,GAAG;IACL,oBACI;MAAA,uBACI;QAAM,SAAS,EAAC,WAAW;QAAA,wBACvB;UACA,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,SAAS;UAAC,KAAK,EAAE,IAAI,CAACnB,KAAK,CAACC,OAAQ;UAAC,QAAQ,EAAEI,YAAa;UAAC,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3F;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,YAAY;UAAC,KAAK,EAAE,IAAI,CAACL,KAAK,CAACE,UAAW;UAAC,QAAQ,EAAEG,YAAa;UAAC,WAAW,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAE,eACnH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB;MAAA;QAAA;QAAA;QAAA;MAAA;IACjB;MAAA;MAAA;MAAA;IAAA,QACL;EAEd;AACJ;AAEA,eAAeP,aAAa"},"metadata":{},"sourceType":"module"}